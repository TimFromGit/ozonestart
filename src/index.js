'use strict'

//checbox

function toggleCheckbox(){
    const checkbox = document.querySelectorAll('.filter-check_checkbox');

    checkbox.forEach(function(elem){
        elem.addEventListener('change', function(){
            if(this.checked){
                this.nextElementSibling.classList.add('checked');
            } else {
                this.nextElementSibling.classList.remove('checked');
            }
        });
    });
}
//end checkbox

//recycle
function toggleCart(){
    const btnCart = document.getElementById('cart');
    const modalCart = document.querySelector('.cart');
    const btnClose = document.querySelector('.cart-close');
    
    btnCart.addEventListener('click', () => {
        modalCart.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    });
    
    btnClose.addEventListener ('click', ()=>{
        modalCart.style.display = 'none';
        document.body.style.overflow = '';
    });
}
//end recycle

//—Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π
function addCart() {
    const cards = document.querySelectorAll('.goods .card'),
        cartWrapper = document.querySelector ('.cart-wrapper'),
        cartEmpty = document.getElementById('cart-empty'),
        countGoods = document.querySelector('.counter'),
        cardPrice = document.querySelectorAll('.card-price');

// –ó–∞–Ω–æ—Å–∏–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
    cards.forEach((card) => {
        const btn = card.querySelector('button');

        btn.addEventListener('click', () => {
            const cardClone = card.cloneNode(true);
            
            cartWrapper.appendChild(cardClone);
            showData();
    //–¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
            const removeBtn = cardClone.querySelector('.btn');
            
            removeBtn.textContent = "–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã";
            removeBtn.addEventListener('click', () => {
                cardClone.remove();
                showData();
            });
        });
    });

    // –ø–æ–¥—Å—á–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    function showData() {
        const cardsCart = cartWrapper.querySelectorAll('.card'),
            cardsPrice = cartWrapper.querySelectorAll('.card-price'),
            cardTotal = document.querySelector('.cart-total span');

    // —Å—á–∏—Ç–∞–µ–º –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
        countGoods.textContent = cardsCart.length;

    // —Å—á–∏—Ç–∞–µ–º —Å—É–º–º—É –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
        let sum = 0;

        cardsPrice.forEach((cardPrice) => {
            let price = parseFloat(cardPrice.textContent);
            sum += price;
        });
        cardTotal.textContent = sum;
        
    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–æ–≤, –µ—Å–ª–∏ –≤—Å–µ —É–¥–∞–ª–∏–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–ø–∏—Å—å –æ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ
        if (cardsCart.length !== 0){
            cartEmpty.remove();
        } else {
            cartWrapper.appendChild(cartEmpty);
        }
    }
}
//end —Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π

//—Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–∏

function actionPage(){
    const cards = document.querySelectorAll('.goods .card'),
        discountCheckbox = document.getElementById('discount-checkbox'),
        min = document.getElementById('min'),
        max = document.getElementById('max'),
        search = document.querySelector('.search-wrapper_input'),
        searchBtn = document.querySelector('.search-btn');
        
        //–∑–∞–ø—É—Å–∫ —Ñ–∏–ª—å—Ç—Ä–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ —á–µ–∫–±–æ–∫—Å—É –∞–∫—Ü–∏–∏
        discountCheckbox.addEventListener('click',filter);
        //–∑–∞–ø—É—Å–∫ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Ü–µ–Ω–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π —Ü–µ–Ω—ã
        max.addEventListener('change', filter);
        min.addEventListener('change', filter);

        //–¥–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä 
        function filter (){
            cards.forEach ((card) =>{
                const cardPrice = card.querySelector('.card-price');
                const price = parseFloat(cardPrice.textContent);
                const discount = card.querySelector('.card-sale');

                if ((min.value && price < min.value) || (max.value && price > max.value)){ //—Ñ–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
                    card.parentNode.style.display = 'none';
                } else if (discountCheckbox.checked && !discount){ //—Ñ–∏–ª—å—Ç—Ä –ø–æ –∞–∫—Ü–∏–∏
                    card.parentNode.style.display = 'none';
                } else {
                    card.parentNode.style.display = '';
                }
            });
        }

        //—Ä–∞–±–æ—Ç–∞–µ–º —Å –ø–æ–∏—Å–∫–æ–º
        searchBtn.addEventListener('click', () => {
            const searchText = new RegExp(search.value.trim(), 'i');
            cards.forEach((card) =>{
               const title = card.querySelector('.card-title');
               if (!searchText.test(title.textContent)){
                card.parentNode.style.display = 'none';
               } else {
                card.parentNode.style.display = '';
               }
            });
            search.value = '';

        });
}
//end —Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–∏

//–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
function getData(){
    const goodsWrapper = document.querySelector('.goods');
    return fetch('../db/db.json')
        .then((response)=> {
            if (response.ok){                   //–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω–∏—è
                return response.json();
            } else {
                throw new Error ('–î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã, –æ—à–∏–±–∫–∞: ' + response.status);
            }
        })
        //.then(data => renderCards(data))
        .then((data) => {
            return data;
        })     //–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–µ–π –≤—ã–≤–æ–¥–∞ —Ç–æ–≤–∞—Ä–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
        .catch(err => {
            console.warn(err);
            goodsWrapper.innerHTML = '<div style="color: red; font-size: 30px">–£–ø—Å —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!</div>'
        });

}

//–≤—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
function renderCards(data){
    const goodsWrapper = document.querySelector('.goods'); //–ø–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å —Ç–æ–≤—Ä–æ–≤/–æ–±–µ—Ä—Ç–∫–∞
    data.goods.forEach((good) => { // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
        const card = document.createElement('div'); //—Å–æ–∑–¥–∞–µ–º –¥–∏–≤ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
        card.className = 'col-12 col-md-6 col-lg-4 col-xl-3'; //–ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –¥–∏–≤—É –∫–ª–∞—Å—Å—ã –≤–µ—Ä—Å—Ç–∫–∏
        //–ø–æ–º–µ—â–∞–µ–º –≤–µ—Ä—Å—Ç–∫—É –≤ –∫–∞—Ä—Ç–æ—á–∫—É
        card.innerHTML = `
            <div class="card" data-category="${good.category}">
                ${good.sale ? '<div class="card-sale">üî•Hot Saleüî•</div>' : ''}
				<div class="card-img-wrapper">
                    <span class="card-img-top"
    					style="background-image: url('${good.img}')"></span>
				</div>
				<div class="card-body justify-content-between">
					<div class="card-price" style="${good.sale ? 'color:red' : ''}">${good.price} ‚ÇΩ</div>
                    <h5 class="card-title">${good.title}</h5>
                    <button class="btn btn-primary">–í –∫–æ—Ä–∑–∏–Ω—É</button>
				</div>
		    </div>
        `;
        goodsWrapper.appendChild(card); //–ø–æ–º–µ—â–∞–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ–±–µ—Ä—Ç–∫—É
    })
}
//end –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞

//–∫–∞—Ç–∞–ª–æ–≥
function renderCatalog(){
    const cards = document.querySelectorAll('.goods .card');
    const catalogList = document.querySelector('.catalog-list');
    const catalogWrapper = document.querySelector('.catalog')
    const catalogBtn = document.querySelector('.catalog-button');
    const categories = new Set(); //—Å–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é, –∫—É–¥–∞ –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤

    cards.forEach((card) => {
        categories.add(card.dataset.category); //–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –∫–æ–ª–µ–∫—Ü–∏—é
    });

    //–¥–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –Ω–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –º–µ–Ω—é –∫–∞—Ç–∞–ª–æ–≥
    categories.forEach((item) => {
        const li = document.createElement('li');
        li.textContent = item;
        catalogList.appendChild(li);
    });
    //–æ—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞
    catalogBtn.addEventListener('click', () => {
        if (catalogWrapper.style.display){
            catalogWrapper.style.display = '';
        } else {
            catalogWrapper.style.display = 'block';
        }
        if (event.target.tagName === 'LI'){
            cards.forEach((card) => {
                if (card.dataset.category === event.target.textContent){
                    card.parentNode.style.display = '';
                } else {
                    card.parentNode.style.display = 'none';
                }
            });
        }
    });
}
//end –∫–∞—Ç–∞–ª–æ–≥

getData().then((data) => {
    renderCards(data);
    toggleCheckbox();
    toggleCart();
    addCart();
    actionPage();
    renderCatalog();
});

